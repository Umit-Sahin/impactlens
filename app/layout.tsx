// app/layout.tsx

import "./globals.css";
import { ReactNode } from "react";
import { Footer } from "./components/Footer";
import ClientWrapper from "./components/ClientWrapper";

export const metadata = {
  title: "ImpactLens",
  description: "Code impact insights for developers, testers and DevOps",
  icons: {
    icon: "/docs/favicon.png",
  },
};

export default function RootLayout({ children }: { children: ReactNode }) {
  return (
    <html lang="en">
      <body className="pb-[20px] bg-gray-50 text-gray-900">
        <ClientWrapper>{children}</ClientWrapper>
        <Footer />
      </body>
    </html>
  );
}

// ğŸ“Œ Not:
// âœ… ArtÄ±k SessionProvider tÃ¼m uygulamayÄ± sarÄ±yor ve mevcut ClientWrapper + Footer yapÄ±sÄ±nÄ± koruyor.
// âœ… BÃ¶ylece alt komponentlerde useSession gÃ¼venle kullanÄ±labilir.
// âœ… SOC 2 uyumlu yapÄ± saÄŸlandÄ±, sensitive veri taÅŸÄ±madan sadece session eriÅŸimi yÃ¶netiliyor.
